import numpy as np

table = np.array([[1.0,0,0,0],[0,0,0.5,0]]) # rows are balls (0 = cue, 1 = 1,...), columns are properties of balls (x velocity, y velocity, xpos, ypos)

def collision( n, m):
    table[n,0], table[m,0] = 0.9*table[m,0], 0.9*table[n,0]
    table[n,1], table[m,1] = 0.9*table[m,1], 0.9*table[n,1]
def horizontal_wall(n):
    table[n,1] = -0.9*table[n,1]
def vertical_wall(n):
    table[n,0] = -0.9*table[n,0]


def play(vx,vy):
    dt = 0.01 # interval of time between "frames"
    table[0,0], table[0,1] = vx, vy # Initial velocity of cue ball
    print(table)
    for ball in range(2):
        while np.sqrt(np.sum(table[:,0]**2)) > 0.5:
            table[ball,2] = table[ball,2] + (table[ball,0]*dt) # xf = x0 + vx*dt
            if np.sqrt((table[ball,2]-table[ball-1,2])**2+(table[ball,3]-table[ball-1,3])**2) < 0.01: # Collisions between balls
                collision(ball,ball-1)
                print('Collision between ', ball, ' and ', np.abs(ball-1))
                print(table)
            if np.abs(table[ball,2]) >= 1: # Collisions with vertical walls
                vertical_wall(ball)
                print(ball, ' hit a wall.')
                print(table)
    
play(1.0,0)
